#-------------------------------------------------------------------------------
#
# Project:          VirES-Aeolus
# Purpose:          Aeolus -- configuration file
# Authors:          Christian Schiller
# Copyright(C):     2017 - EOX IT Services GmbH, Vienna, Austria
# Email:            christian dot schiller at eox dot at
# Date:             2019-09-02
# License:          MIT License (MIT)
#
#-------------------------------------------------------------------------------
# The MIT License (MIT):
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies of this Software or works derived from this Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------

# Project:          VirES-Aeolus
# Purpose:          Aeolus -- configuration file
# Authors:          Christian Schiller
# Copyright(C):     2017 - EOX IT Services GmbH, Vienna, Austria
# Email:            christian dot schiller at eox dot at
# Date:             2019-09-02
# License:          MIT License (MIT)



[general]
## set to verbose output (either: False/True)
## verbose may producs tons of output
verbose = False
#verbose = True

## log-file where output and errors should be written to
logfile =  /var/log/vires/ftp_data_dwnl.log

#### --- NOT YET IMPLEMENTED
## set to display debugging output (either: False/True)
# debug = False


[server]
## the source server to be mirrored
server = ftp://aeolus-ds.eo.esa.int
# server = ftp://goldrake.eo.esa.int  # Alternative

## the directoriy on the source-server to be mirrored
## for a single directory  use string i.e.  dir = dir1
## for multiple directories use a python-list i.e.  dir =['dir1', 'dir2', 'dir3' ]
dir =  ['/ADDF/L1B_L2_Products/1B02', '/ADDF/L1B_L2_Products/1B03', '/ADDF/L1B_L2_Products/1B04', '/ADDF/L1B_L2_Products/1B05', '/ADDF/L1B_L2_Products/1B06', '/ADDF/L1B_L2_Products/1B07', '/ADDF/L1B_L2_Products/1B08', '/ADDF/L1B_L2_Products/1B10', '/ADDF/L1B_L2_Products/1B11', '/ADDF/L1B_L2_Products/2A02', '/ADDF/L1B_L2_Products/2A03', '/ADDF/L1B_L2_Products/2A04', '/ADDF/L1B_L2_Products/2A05', '/ADDF/L1B_L2_Products/2A06', '/ADDF/L1B_L2_Products/2A07', '/ADDF/L1B_L2_Products/2A08', '/ADDF/L1B_L2_Products/2A10', '/ADDF/L1B_L2_Products/2A11', '/ADDF/L1B_L2_Products/2B02', '/ADDF/L1B_L2_Products/2B03', '/ADDF/L1B_L2_Products/2B04', '/ADDF/L1B_L2_Products/2B05', '/ADDF/L1B_L2_Products/2B06', '/ADDF/L1B_L2_Products/2B07', '/ADDF/L1B_L2_Products/2B08', '/ADDF/L1B_L2_Products/2B10', '/ADDF/L1B_L2_Products/2B11' ]

## file-filter to be used to limit download to defined products
file_filter = ['AE_OPER_ALD_U_N_']

## include subdirectories to be mirrored (set True or False)
subdir = True

## default number of parallel connections to use for download (min: 1; max:100)
num_conn = 2

## the .netrc file to be used (set it to None if you supply login-data below - or vice versa)
netrc = /usr/local/vires/ftp_mirror_and_register/.netrc

## if you do not use a .netrc file you may also define things below
# username at source-server
serveruid = None
# password at source-server
serverpwd = None
# a proxy to be used -- http://some.where.else:8080
proxy = None
# username at proxy
proxyuid = None
# password at proxy
proxypwd = None



[local]
# the local 'root' (=target) directory where mirrored zip-files are stored
ftp_inpath = /mnt/data/ftp_in/

# added files used for FTP-synching without actually storing all the ZiP-files locally
ftp_list_now = /usr/local/vires/ftp_mirror_and_register/ftp_lists/ftp_list_now
ftp_list_prev = /usr/local/vires/ftp_mirror_and_register/ftp_lists/ftp_list_prev
bad_zips = /usr/local/vires/ftp_mirror_and_register/ftp_lists/ftp_bad_zips

# location where extracted (unzipped) datasets are stored for use by the VirES-Application
## for a single directory  use string i.e.  dir = dir1
## for multiple directories use a python-list i.e.  dir =['dir1', 'dir2', 'dir3' ]
##   --> ensure to have the same order for data as in server-locations !
data = ['/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L1B', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2A', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B', '/mnt/data/aeolus/L1B_L2_Products/L2B']


# location where the checksum file is stored
chksum_file = /usr/local/vires/ftp_mirror_and_register/checksum_listing.txt
# encoding to be used for the checksum creation
chksum_encoding = md5

[instance]
## location of eoxserver instance
#path = /var/www/aeolus.services/production/eoxs
path = /var/www/<domain>/<environment>/eoxs
